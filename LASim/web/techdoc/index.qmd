---
title: "SLAB Legal Aid Model Documentation"
date: today
date-format: full
authors:
  - name: Graham Stark
    affiliation: Virtual Worlds Research
    email: graham.stark@virtual-worlds.scot
citation:
  url: https://virtual-worlds.scot/techdoc/index.html
bibliography: SLAB-2024.bib
csl: /home/graham_s/pandoc_data/chicago-note-bibliography.csl
# engine: julia

---


## Introduction

These are technical notes for the for the Scottish Legal Aid Board eligibility simulator model.

For an overview of the purpose and desired specifications of the model, please refer to the SLAB bid document and the Virtual Worlds tender document. For an overview of the legal aid system itself, see [???] Broadly, purpose of the model is to estimate the entitlement to both Civil and Advice and Assistance (AA) legal aid amongst the Scottish Population under the current and various hypothetical systems, and from that estimate the likely costs or savings of changes to eligibility rules. 

The LASim model that was built do do this built on earlier work for the England And Wales Legal Aid Board [@buck_means_2001;@buck_simplicity_2003;] and the Scottish and Northern Irish Legal Aid Boards [@digan_financial_2007;@StarkSLAB]. 

The model has undergone continual development over the period January 2024-September 2025. This version reflects the code at the latter date.

## The Model
::: {.callout-note}

All the code used in this project is publicly available on the GitHub code sharing site. The code is intended to be readable by non-specialists; hopefully it should mostly be clear enough for SLAB to understand at least in outline. Understanding of the Julia programming language[@bezanson_julia:_2017] would be helpful for this but shouldn't be needed to understand the the intention of code. An exception to this is the user interface code which was revised so frequently in the last few weeks that it badly needs a refactor.

:::

### Code organisation

LASim builds on [Scotben](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/), a microsimulation tax-benefit model of Scotland. Scotben is a conventional static microsimulation model, built using the [Julia](https://juliahub.org) programming language and Family Resources Survey (FRS) [@department_for_work_and_pensions_family_2023] data. 

A tax benefit model is a computer program that calculates the effects of possible changes to the fiscal system on a sample of households. We take each of the households in our dataset, calculate how much tax the household members are liable for under some proposed tax and benefit regime, and how much benefits they are entitled to, and add add up the results. If the sample is representative of the population, and the modelling sufficiently accurate, the model can then tell you, for example, the net costs of the proposals, the numbers who are made better or worse off, the effective tax rates faced by individuals, the numbers taken in and out of poverty by some change, and much else. For  tax-benefit models generally, see [@odonoghue_practical_2021].

All the code used in this project is available for inspection on the GitHub code sharing site, as follows:

* [Scotben - the Main Model](https://github.com/grahamstark/scottishtaxbenefitmodel.jl)
* [LASim - the web Front End](https://github.com/grahamstark/lainterfaces/)

Julia code is organised into [modules](https://docs.julialang.org/en/v1/manual/modules/) which are aggregated into [packages](https://juliapackages.com/). Packages can be downloaded and either run directly or integrated into other programs. ScotBen is a Julia package. For this project, several modules were added to the Scotben package:

* [LegalAidCalculations.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/LegalAidCalculations.jl) - this calculates entitlement to both Civil and AA for a single FRS household.  
* [LegalAidOutput.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/LegalAidOutput.jl) - this generates output tables and calculates the likelihood that a given household will claim legal aid.
* [LegalAidData.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/LegalAidData.jl) - this holds SLAB supplied individual-level records for payments and contributions under both Civil and AA legal aid. This is used along with tbe entitlement data to produce cost and takeup estimates. 

in addition, additions were made to the following Modules:

* [STBParameters.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/STBParameters.jl) - this models the parameters needed for the entire Scottish/UK fiscal system - tax rates, benefit levels and so on. A set of parameters capturing capital and income limits, rules for allowances, disregarded incomes, etc. was added 
* [Results.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/Results.jl) - This holds records capturing entitlements to benefits, liability to tax, etc. for a single household. A record capturing entitlement to Legal Aid, contributions, assessed income, etc. was added, as `OneLegalAidResult`.
* [SingleHouseholdCalculations.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/SingleHouseholdCalculations.jl) - this runs all calculations for all FRS households. A small call was added to optionally run the legal aid calculations; 
* [STBOutput](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/STBOutput.jl) - this holds the main output from the model. The structures from `LegalAidOutput` are incorporated here.
* [RunSettings](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/RunSettings.jl) - fields were added to control optional switching of the capital source - this is discussed below.  

In addition, considerable development time was spent on the module [LegalAidRunner.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/LegalAidRunner.jl) which was intended to be a specialised high-speed driver module for legal aid calculations. This module was eventually abandoned because its memory requirements were too mich for the relatively underpowered laptop chosen to host the model.

### Taxes and Benefits

The 2007 model was custom-written to specifically model Legal Aid. Instead of calculating liability to taxes and entitlements to benefits, it instead simply took recorded FRS values for these things and used those in its LA calculations. The current system is a general purpose tax-benefit model which makes it's own estimates of household liabilities and entitlements given the rules of the fiscal system. We chose this approach chiefly because the benefit system, in particular, is changing rapidly, especially with the phased introduction of Universal Credit. To model Scotland with reasonable accuracy, you need to 'pool' multiple years of FRS data and, unless you override recorded benefit receipts with values calculated on the current regime, older data becomes unrepresentative. (The same is true of direct taxes though this is less relevant to Legal Aid Calculations). Currently, the model uses
data from the FRSs from 2019, 2021, 2022 and 2023. 2020 was skipped because of the pandemic. Previous versions used pooled 2015-2022 FRSs, including the pandemic year.

::: {.callout-note}
There are two issues with benefits:

* we use modelled entitlements rather than recorded receipts. There are currently no official estimates of means-tested benefit takeup (it is deemed too complex because of the legacy/UC transition[@dwp_income-related_2022]) but previous estimates were of the range 50-80% [^@]. As a late option, a simple takeup correction routine was added; this is [discussed below]();
* in the final Sep 2025 version, it is assumed that the transition to Universal Credit is 100% complete. This is in fact the case for Tax Credits, and almost the case for Income Support/JSA/ESA. Previous versions [attempted to model the transition](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/UCTransition.jl) based on analysis by the House Of Commons Library[@house_of_commons_library_constituency_2020].

:::

#### Takeup

A simple [benefit takeup correction routine](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/CrudeTakeup.jl) was added last-minute. This disallows fixed proportions of calculated benefit entitlements, as follows:

* Working Tax Credit Single Parents = 72%
* Working Tax Credit Others = 50% ([source](https://ifs.org.uk/sites/default/files/output_url_files/ifs-takeup1b.pdf) )

* Universal Credit: I can't find any study of UC takeup (see [@dwp_income-related_2022] for a discussion); however there is an argument that it is likely at least as high as for Income Support or WTC since it bundles housing costs so average payment is higher [@brewer_universal_2011]. 80% was chosen.

* Pension/Savings Credit 60% [@dwp_income-related_2024]
* Housing Benefit 80%
* Income Support/JSA/ESA 90%

A full takeup correction model would be much more sophisticated than this, but I was unable to locate up-to-date models for the UK or Scotland, and there was no time to estimate one. See [@brewer_estimating_2003;@fry_takeup_1992] for examples. Typically takeup varies positively with income (so takeup by value is higher than takeup by caseload) but for our purposes a crude correction by caseload is mostly OK since we're mostly concerned with passporting.

### Sources 

Specification of the legal aid system came from the following documents:

* SLAB Civil Keycard [@slab_civil_2024]
* Financial eligibility for civil legal aid: general conditions and limits [@slab_financial_2024-1]
* The Civil Legal Aid (Scotland) Regulations 2002 [@scottish_legal_aid_board_civil_2002];

### Testing 

Core code is created test-first[@google_inc_introducing_2021]. Material for the tests came mainly from the online Legal Aid Calculators[@slab_aa_estimator_2024;@slab_eligibility_2024]. The spreadsheet 
[testcalcs.ods][https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/docs/legalaid/testcalcs.ods] contains the raw test cases, which were translated into the test suite [legal_aid_calculations_tests.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/test/legal_aid_calculations_tests.jl). The testsuite also contains a number of "dry runs" of the model.

::: {.callout-note}
The test suite is not as comprehensive as it should be. Quite a serious mistake in how capital is treated for passporting in AA slipped through unchecked until late in the development process. Mistakes in which benefits are disregarded also slipped though until late on. 
:::
### Web Interface

The model has a web user interface. The code for this is in the LASim package. This is effectively the main package for the system, though legal aid simulations can actually be run directly from the `Scotben` package, or from any code that imports `ScotBen`. 

The package uses the [Genie](https://genieframework.com/) web framework. Genie provides much of the messy back-end needed for a web application, such as a simple web-server, the facility to start sessions for users and the like. Building on this, LASim is a single-page application which uses a large amount of hand-written Javascript to handle submissions and responses. Styling uses the [Bootstrap](https://getbootstrap.com/) css framework, customised to use SLAB fonts and colours. 

::: {.callout-note}
There are several issues with the front-end:

* the front-end package needs rationalised. The package includes not only the actual front-end but two earlier abortive attempts at interfaces for the model. Only the `LASim` subfolder is actually needed;
* the front-end is probably too big for a single page. It should either be broken up or aspects of inputs and outputs should be hidden by default
* the interface code is hand-written and close to the limit of what can be maintained by hand-coding. A more automated system would be needed if many more options were added;
* there are problems with the interface's performance on the rather limited SLAB laptop supplied for running it;
* the monitoring `progress bar` code was added last-minute and is somewhat unreliable.

:::


### FRS Data

The model uses the Scottish households from pooled 2019,2021,2022 and 2023 Family Resources (FRS) data[@department_for_work_and_pensions_family_2024]. We use the public use FRS release which has a number of fields deleted for privacy reasons, though the deletions often seem arbitrary. 

### Matching 

The FRS is augmented with matched in data from the Scottish Household Survey[@scottish_government_scottish_2024-1] and the Living Costs and Food Survey. SHS is mainly used to give local-level information and is not very relevant to Legal Aid. LCF is used to provide estimates for some of the expense fields - repayments, travel to work costs and work expenses. The matching code for this dataset is [the matching/ folder](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/tree/master/matching). Matching uses a custom version of Coarsened Exact Matching [@iacus_causal_2011; @leulescu_statistical_2013; @dorazio_statmatch_2022] 

Both LCF and SHS are matched to FRS at the household level.

The SHS/FRS are matched on:
* Tenure Type
* Accomodation Type
* Single Parent
* Num Adults
* Num Children
* Employment Status of Head of Household (HoH)
* Socio-Economic Status of HoH
* Age of HoH
* Ethnic Group Of HoH 

LCF/FRS are matched on:

* Tenure Type
* Accommodation Type
* Number of Rooms
* Age of Head
* Num Children
* Is self employed
* Num children
* Num adults
* Ethnic Group (White/Non-White)
* Age of HoH
* Ethnic Group Of HoH 

The 'top 20' matches on these variables are then ranked by household income. 

Code for this is in the [MatchingLibs.jl module](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/MatchingLibs.jl)

#### Capital

Modelling the capital test proved a struggle. The FRS has limited information on assets. A companion survey, the Wealth Assets Survey (WAS)[@office_for_national_statistics_wealth_2017] provides more comprehensive coverage. WAS figures are often much larger than FRS figures.  

#### FRS 
FRS asset figures are for financial assets only and are recorded at individual, benefit unit and household levels.
The variables aim to record:

> "The total value of all liquid assets, including fixed-term investments. Pound amounts are informed by responses to questions on the value of assets or, in some cases, estimated from the interest on the savings."[@department_for_work_and_pensions_family_2023]. 

FRS asset data is recorded in several places:

* The `assets` records, which record individual assets held by household members, and the `accounts` record, which records interest receipts;
* `totcapb3` and `totcapb4`, which are ONS calculated total financial assets, constructed by summing the `assets` values and adding to that estimated assets from the `accounts` records for cases where `assets` are missing for some account type[^fntotcap]. These are recorded at the benefit unit level;
* `totsav`, which is a banded benefit unit level variable that's supposed to be derived from the `totcap` variables, though it seems inconsistent with those in some cases.

FRS has no physical capital variables and no measure of net debt. (All these measure are non-negative)

The FRS/ONS note on savings and investments is as follows [@dwp_family_2020]:

> Savings and investments

> The FRS does not capture information on non-liquid assets. Physical wealth and pensions accruing are not included in FRS estimates. The survey also does not capture detailed information on expenditure (except for housing costs). Therefore, it is not possible to show how households are coping financially, in terms of income versus outgoings.

> However, the FRS does capture information on liquid financial assets, referred to in the survey as ‘savings and investments’. Estimates for savings and investments should be treated with caution, as they are likely to be under-estimates, since respondents often inaccurately report their account details. In view of this, the information is gathered as follows:

>  *  Respondents are asked, as a benefit unit, to say which of several £ bands their total level of savings and investments are in
> * Benefit units that report between £1,500 and £20,000 (28% of benefit units) are then asked, for each of their accounts and assets, how much each is worth and how much interest they accrue. The total level of savings and investments is then calculated using this set of reported values
> * Benefit units with reported savings and investments below £1,500 and above £20,000 (72% of benefit units) are only asked how much interest each account and asset accrues. These respondents are also asked to estimate the value of all of their current accounts and basic bank accounts combined


The 2007 Model used the `totsav` record exclusively.

#### The Wealth and Assets Survey (WAS)

The Wealth and Assets Survey (WAS) [@office_for_national_statistics_wealth_2017]. It has comprehensive data on financial, physical, housing and pension wealth. 

An alternative we explored was to impute wealth onto the FRS from WAS. We did this using a linear regression on household characteristics (Code for this is in the files: `load_was.jl` and `wealth_regressions.jl` in the [https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/regressions/(https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/regressions/)] folder)

* `HphysWR7` - Total Physical Wealth
* `HPropWR7` - Total net property wealth
* `TOTPENR7_aggr` - HH Value of total pensions
* `HFINWNTR7_Sum` - Household Net Financial wealth

All at the household level. Regressions were in logs.  All except net pension wealth can be negative, so separate regression were run for net debtors and creditors, and a probit was used to predict whether a household had net positive assets of each type.

::: {.callout-note}

These regressions were a holdover from a previous project modelling a wealth tax. Modelling wealth from regressions is hard because wealth is highly skewed and because of the need to model net positives and negative separately. In retrospect it would have likely been preferable to use data matching rather than regressions here.

:::

We also developed a hybrid method which we took the higher of the `totsav` and `totcapb3` FRS variables and then inferred physical wealth as 60% of financial wealth, since this is roughly the ratio between the two in WAS. There is no great logic to this but it may be the best we can do with the data we have.

The upshot of this is that we have three different measures of financial wealth, with no very clear story to tell about which is the best. The differences between the FRS measures and the WAS measure is very striking[^upratenote]. All three measures are selectable from the model front-end. Below are summary statics for our three financial wealth measures and a frequency plot in levels and logs. Note how much larger the WAS measure is, and that WAS financial wealth can be negative. 

FRS `totcapb3`:

    Mean:           49956.744418
    Std. Deviation: 341989.645891
    Minimum:        0.000000
    1st Quartile:   0.000000
    Median:         2200.000000
    3rd Quartile:   15000.000000
    Maximum:        14220994.478282


FRS Hybrid Method:

    Mean:           57846.211156
    Std. Deviation: 343156.049386
    Minimum:        0.000000
    1st Quartile:   0.000000
    Median:         5505.000000
    3rd Quartile:   31707.500000
    Maximum:        14220994.478282

WAS IMPUTATION:

    Mean:           152488.665372
    Std. Deviation: 1352864.608534
    Minimum:        -1031504.371745
    1st Quartile:   552.542060
    Median:         9087.785520
    3rd Quartile:   56710.460409
    Maximum:        118888658.238608

![](cell-3-output-1.png)

##### WAS/FRS Data Matching 

As a very late addition at the request of SLAB an option to join FRS and WAS was added. The [code for this](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/MatchingLibs.jl) follows the LCF/WAS matching discussed immediately below though with different matching variables. Data is matched on:

* age of head 
* region (biased towards matching Scottish records from each dataset)
* socio-ecomomic position of head 
* type of dwelling (flat, etc.)
* tenure type 
* socio-economic position of head 
* employment status of head 
* sex of head
* marital status of head
* any wages in hh
* any self-employment income in hh 
* any pension income in hh
* head has degree or above
* number of adults
* number of children

For each frs household, a score is generated from comparing with each WAS record on these fields.
The top 20 matches are then sorted by closeness of household income. Currently only the closest single record is used but a facility to use multiple records to generate confidence intervals could be added [^li-chung]. 

#### Expenses

*Housing* - for owner occupiers the FRS normally just counts mortgage interest as a cost. We add in capital repayments though this is tricky to derive from FRS variables. Code is in `mortage_capital_payments` function in the `Household_Mappings_FRS_Only.jl` module. `mortage_capital_payments` calculates:

    total amount of mortgage (`borramt`) / total Term of mortgage (`mortend`)

With a correction for remortgages and returns the weekly equivalent.

Mortgage interest is a separate slot using the FRS ` mortint` variable. Both are used in the legal aid calculation (but capital can optionally be switched off).

*Maintenance payments* - this is the sum of the FRS `maint` records for each individual.

*Debt repayments* - there is no FRS code for repayments other than student debt repayments, so for this we use matched LCF data - codes: `lcf.b237 + lcf.b238 + lcf.ck5316t + lcf.cc6211t`. 

    B237 = Credit card interest payments
    B238 = Annual standing charge for credit cards
    ck5316t = Pay off loan to clear other debt - children and adults
    C62114t = Bank Charges

See the [MatchingLibs.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/src/MatchingLibs.jl) package and [lcf_frs_matching.jl](https://github.com/grahamstark/ScottishTaxBenefitModel.jl/blob/master/matching/lcf_frs_matching.jl) script for more on how FRS and LCF are matched. 

*travel to work*: here's no good data on this in any household dataset I'm aware of. So I make an arbitrary assumption: 50% of spending on:

    - bus_boat_and_train, 
    - petrol,
    - diesel,
    - other_motor_oils, 
    - other_transport 

from the matched lcf record, allocated between all those reporting being in work. Previously the FRS had a travel to work cost variable `TTWCOSTS` but this was deleted in 2007 onwards.

::: {.callout-note}

Expense fields seem low. It is known that average expenses for maintenance contributions, debt repayments and work expenses are much lower on average in the FRS than in SLAB administrative data. This may simply be a selection problem but needs more investigation. Debt payments in particular could be reworked. Note that student loans are mostly paid through income tax and thus automatically deducted from the model's income tax calculation.
:::

### Scottish Crime and Justice Survey (SCJS)

As an aside, the original proposal was to use SCJS[@scottish_government_scottish_crime_2024] to model the likelihood of households experiencing a problem requiring legal advice. Some initial work was carried out which produced promising but this was abandoned on SLAB's instructions. It could well be worth returning to this, perhaps as a stand-alone piece of work.  

### SLAB Datasets

Anonymised versions of the complete SLAB Civil and AA payments data for 2022/3 were supplied. These were used in the production of cost and caseload estimates. The procedure is crude, but the same as used in the 2007 study. The module `LegalAidData.jl` crosstabs the payment data by age group, sex/gender, case type, and entitlement level (passported/full entitlement/with contribution) and these are matched against crosstabs from the model by age/sex/estimated entitlement level to give estimates of the propensity of each entitlement group to claim legal aid. This is a crude procedure which at times produces questionable results such as the propensities for contributory benefit units sometimes being higher than for passported/fully entitled benefit units.    

### Updating and Maintenance

::: {.callout-note}

The model data is currently uprated to 2025 Q3 and the tax-benefit parameter system is as of November 2024. The Legal Aid parameters themselves are those currently in operation.

:::

### References

::: {#refs}
:::


[^fntotcap]: We use `totcap3` since that's the only version that's available for all the years we pool over.
[^upratenote]: Note that since this data is aggregated over 2015-21 and uprated to 2023Q4, these numbers won't be exactly reproducable from the raw FRS records.
[^li-chung]: sometimes called 'Li-Chuning' after the [University of Southamption professor who proposed this method](https://www.southampton.ac.uk/people/5x9mtl/professor-li-chun-zhang). 